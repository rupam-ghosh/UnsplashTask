package com.colearn.unsplashtask.pojos

import android.os.Parcel
import android.os.Parcelable
import com.colearn.unsplashtask.pojos.ProfileImage
import com.google.gson.annotations.Expose
import com.google.gson.annotations.SerializedName

/*
*  Generated by https://www.jsonschema2pojo.org/
*/
class User : Parcelable {
    @SerializedName("id")
    @Expose
    var id: String? = null

    @SerializedName("username")
    @Expose
    var username: String? = null

    @SerializedName("name")
    @Expose
    var name: String? = null

    @SerializedName("portfolio_url")
    @Expose
    var portfolioUrl: String? = null

    @SerializedName("bio")
    @Expose
    var bio: String? = null

    @SerializedName("location")
    @Expose
    var location: String? = null

    @SerializedName("total_likes")
    @Expose
    var totalLikes: Long = 0

    @SerializedName("total_photos")
    @Expose
    var totalPhotos: Long = 0

    @SerializedName("total_collections")
    @Expose
    var totalCollections: Long = 0

    @SerializedName("instagram_username")
    @Expose
    var instagramUsername: String? = null

    @SerializedName("twitter_username")
    @Expose
    var twitterUsername: String? = null

    @SerializedName("profile_image")
    @Expose
    var profileImage: ProfileImage? = null

    @SerializedName("links")
    @Expose
    var links: UserLinks? = null

    protected constructor(`in`: Parcel) {
        id = `in`.readValue(String::class.java.classLoader) as String?
        username = `in`.readValue(String::class.java.classLoader) as String?
        name = `in`.readValue(String::class.java.classLoader) as String?
        portfolioUrl = `in`.readValue(String::class.java.classLoader) as String?
        bio = `in`.readValue(String::class.java.classLoader) as String?
        location = `in`.readValue(String::class.java.classLoader) as String?
        totalLikes = `in`.readValue(Long::class.javaPrimitiveType!!.classLoader) as Long
        totalPhotos = `in`.readValue(Long::class.javaPrimitiveType!!.classLoader) as Long
        totalCollections = `in`.readValue(Long::class.javaPrimitiveType!!.classLoader) as Long
        instagramUsername = `in`.readValue(String::class.java.classLoader) as String?
        twitterUsername = `in`.readValue(String::class.java.classLoader) as String?
        profileImage = `in`.readValue(ProfileImage::class.java.classLoader) as ProfileImage?
        links = `in`.readValue(UserLinks::class.java.classLoader) as UserLinks?
    }

    constructor() {}

    override fun writeToParcel(dest: Parcel, flags: Int) {
        dest.writeValue(id)
        dest.writeValue(username)
        dest.writeValue(name)
        dest.writeValue(portfolioUrl)
        dest.writeValue(bio)
        dest.writeValue(location)
        dest.writeValue(totalLikes)
        dest.writeValue(totalPhotos)
        dest.writeValue(totalCollections)
        dest.writeValue(instagramUsername)
        dest.writeValue(twitterUsername)
        dest.writeValue(profileImage)
        dest.writeValue(links)
    }

    override fun describeContents(): Int {
        return 0
    }

    companion object {
        val CREATOR: Parcelable.Creator<User?> = object : Parcelable.Creator<User?> {
            override fun createFromParcel(`in`: Parcel): User? {
                return User(`in`)
            }

            override fun newArray(size: Int): Array<User?> {
                return arrayOfNulls(size)
            }
        }
    }
}